name: Docker Publish

on:
  push:
    branches:
      - 'main'
    tags:
      - 'base-httpd-*'
      - 'kiwix-serve-*'
      - 'edupi-*'
      - 'filebrowser-*'
      - 'captive-portal-*'

jobs:
  identify:
    name: Identify which projects to build
    runs-on: ubuntu-22.04
    outputs:
      base-httpd: ${{ steps.ident.outputs.base-httpd }}
      kiwix-serve: ${{ steps.ident.outputs.kiwix-serve }}
      edupi: ${{ steps.ident.outputs.edupi }}
      filebrowser: ${{ steps.ident.outputs.filebrowser }}
      captive-portal: ${{ steps.ident.outputs.captive-portal }}
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 2
      - name: Get changed files
        id: files
        uses: tj-actions/changed-files@v32.0.0
        with:
          separator: ','
      - id: ident
        shell: python
        env:
          FILES: ${{ steps.files.outputs.all_changed_and_modified_files }}
        run: |
          import os
          print("changed-files", os.getenv("FILES"))
          projects = set()
          # for tags like `base-httpd-2.0.1`
          if os.getenv("GITHUB_REF_TYPE") == "tag":
            projects.add(os.getenv("GITHUB_REF_NAME").rsplit("-", 1)[0])

          for fname in os.getenv("FILES").split(","):
            if len(fname.split("/")) > 1:
              projects.add(fname.split("/")[0])

          for project in projects:
            with open(os.getenv("GITHUB_OUTPUT"), "a") as fh:
              fh.write("{project}=yes\n".format(project=project))

  base-httpd:
    name: Publish base-httpd Image
    runs-on: ubuntu-22.04
    needs: identify
    if: ${{ needs.identify.outputs.base-httpd == 'yes' }}
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Publish base-httpd Image
        uses: openzim/docker-publish-action@v9
        with:
          image-name: offspot/base-httpd
          on-master: dev
          tag-pattern: /^base-httpd-([0-9.]+)$/
          restrict-to: offspot/container-images
          platforms: |
            linux/amd64
            linux/arm/v6
            linux/arm/v7
            linux/arm64
          context: base-httpd
          registries: ghcr.io
          credentials:
            GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}

  kiwix-serve:
    name: Publish kiwix-serve Image
    runs-on: ubuntu-22.04
    needs: identify
    if: ${{ needs.identify.outputs.kiwix-serve == 'yes' }}
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Publish kiwix-serve Image
        uses: openzim/docker-publish-action@v9
        with:
          image-name: offspot/kiwix-serve
          on-master: dev
          build-args:
            VERSION={tag}
          tag-pattern: /^kiwix-serve-([0-9.]+)$/
          restrict-to: offspot/container-images
          platforms: |
            linux/amd64
            linux/arm/v6
            linux/arm/v7
            linux/arm64
          context: kiwix-serve
          registries: ghcr.io
          credentials:
            GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}

  edupi:
    name: Publish edupi Image
    runs-on: ubuntu-22.04
    needs: identify
    if: ${{ needs.identify.outputs.edupi == 'yes' }}
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Publish edupi Image
        uses: openzim/docker-publish-action@v9
        with:
          image-name: offspot/edupi
          on-master: dev
          build-args:
            VERSION={tag}
          tag-pattern: /^edupi-([0-9.]+)$/
          restrict-to: offspot/container-images
          platforms: |
            linux/amd64
            linux/arm/v6
            linux/arm/v7
            linux/arm64
          context: edupi
          registries: ghcr.io
          credentials:
            GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}

  filebrowser:
    name: Publish filebrowser Image
    runs-on: ubuntu-22.04
    needs: identify
    if: ${{ needs.identify.outputs.filebrowser == 'yes' }}
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Publish filebrowser Image
        uses: openzim/docker-publish-action@v9
        with:
          image-name: offspot/filebrowser
          on-master: dev
          build-args:
            VERSION={tag}
          tag-pattern: /^filebrowser-([0-9.]+)$/
          restrict-to: offspot/container-images
          platforms: |
            linux/amd64
            linux/arm/v6
            linux/arm/v7
            linux/arm64
          context: filebrowser
          registries: ghcr.io
          credentials:
            GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}

  captive-portal:
    name: Publish captive-portal Image
    runs-on: ubuntu-22.04
    needs: identify
    if: ${{ needs.identify.outputs.captive-portal == 'yes' }}
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Publish captive-portal Image
        uses: openzim/docker-publish-action@v9
        with:
          image-name: offspot/captive-portal
          on-master: dev
          build-args:
            VERSION={tag}
          tag-pattern: /^captive-portal-([0-9.]+)$/
          restrict-to: offspot/container-images
          platforms: |
            linux/amd64
            linux/arm/v6
            linux/arm/v7
            linux/arm64
          context: captive-portal
          registries: ghcr.io
          credentials:
            GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}
